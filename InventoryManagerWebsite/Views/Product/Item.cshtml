@model InventoryManagerWebsite.Models.Product.ProductModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" style="width: 500px; text-align: center">
    @using (Html.BeginForm("Save", "Product", FormMethod.Post))
    {
        @Html.HiddenFor(x => x.ProductItem.Id)
        <div class="row" style="font-size: x-large; font-weight: bold; margin-bottom: 25px">
            Inventory Management
        </div>
        if (Model.ProductItem == null || Model.ProductItem.Id == 0)
        {
            <div class="row" style="font-size: large; font-weight: bold; margin-bottom: 25px">
                Create New Product
            </div>
        }
        <div class="row">
            <div class="col-sm-12 form-group" style="text-align: center">
                @Html.LabelFor(x => x.ProductItem.Name)
                @Html.TextBoxFor(x => x.ProductItem.Name, new Dictionary<string, object> { { "style", "width:100%" }, { "class", "form-control input-lg" }, { "required", "required" } })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 form-group" style="text-align: center">
                @Html.LabelFor(x => x.ProductItem.Barcode)
                @Html.TextBoxFor(x => x.ProductItem.Barcode, new Dictionary<string, object> { { "style", "width:100%" }, { "class", "form-control input-lg" }, { "required", "required" } })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 form-group" style="text-align: center">
                @Html.LabelFor(x => x.ProductItem.Weight)
                @Html.TextBoxFor(x => x.ProductItem.Weight, "{0:n}", new { @class = "form-control input-lg", style = "width:100%", type = "number", step = "0.01" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6" style="width: 50%">
                <button id="Cancel" type="button" class="btn btn-info" onclick="CancelProductItem()">Go Back</button>
            </div>
            <div class="col-sm-6" style="width: 50%">
                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#DeletionModal">Delete</button>
                <button id="Save" type="submit" class="btn btn-primary" onclick="SaveProductItem()">Save</button>
            </div>
        </div>
    }


</div>
<hr style="width: 100%" />
@if (Model.Locations != null && Model.Locations.Any())
{
    <div style="text-align: center; margin-top: 25px; font-size: large">
        <div style="font-weight: bold; margin-bottom: 25px">
            Item Locations
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th style="text-align: center">Location</th>
                    <th style="text-align: center">On Hand</th>
                    <th class="transferHeader"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var l in Model.Locations)
                {
                    <tr class="highlightable-row">
                        <td>@l.LocationDescription</td>
                        <td>@l.QuantityOnHand</td>
                        <td>
                            <button id="Move" type="button" class="btn btn-link" onclick="Move(@l.ProductId, @l.LocationId)">Move</button>
                            <button id="Ship" type="button" class="btn btn-link" onclick="Ship(@l.ProductId, @l.LocationId)">Ship</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (Model.ProductItem != null && Model.ProductItem.Id > 0)
{
    <div style="text-align: center; margin-top: 25px; font-size: large">
        <table class="table">
            <thead>
                <tr>
                    <th style="text-align: center">Location</th>
                    <th style="text-align: center">On Hand</th>
                    <th style="text-align: center"></th>
                    <th style="text-align: center"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>No locations found with this product.</td>
                    <td colspan="3"></td>
                </tr>
            </tbody>
        </table>
    </div>
}

@using (Html.BeginForm("Delete", "Product", FormMethod.Post))
{
    @Html.HiddenFor(x => x.ProductItem.Id)
    <div class="modal" id="DeletionModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Warning! Deleting this product will remove all current inventory from all locations.</p>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Confirm Delete</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts
{
    <script src="~/Scripts/Product/item.js?v=3"></script>
}